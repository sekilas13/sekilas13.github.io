{"version":3,"sources":["App/Components/Navigasi/Memoized/Switcher.js","App/Components/Navigasi/Memoized/Moon.js","App/Components/Navigasi/Memoized/Sun.js","App/Components/Navigasi/Memoized/FormSwitcher.js","App/Components/Navigasi/Memoized/NavLink.js","App/Components/Navigasi/index.js","App/hooks/useDarkMode.js"],"names":["Switcher","theme","tToggler","type","id","checked","onChange","label","memo","Moon","icon","MoonSolid","MoonRegular","Sun","SunRegular","SunSolid","FormSwitcher","Form","Row","className","compare","prevProps","nextProps","List","nama","to","NavLink","path","ref","navbarRef","expanded","setExpandClose","handleLink","e","preventDefault","el","document","querySelector","target","setTimeout","tujuan","offsetTop","getBoundingClientRect","height","window","scrollTo","renderer","Nav","Link","as","onClick","map","link","i","href","observer","store","useContext","Context","useRef","themeColor","msApp","light","dark","setMode","mode","localStorage","setItem","setTheme","useEffect","localTheme","getItem","content","useDarkMode","themeToggler","useState","state","UNSAFE_setState","location","useLocation","history","useHistory","setState","useCallback","data","expandClose","Navbar","bg","variant","sticky","expand","onToggle","Container","Brand","pathname","querySelectorAll","forEach","classList","remove","push","Toggle","aria-controls","Collapse","current"],"mappings":"+MAGA,SAASA,EAAT,GAAwC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzB,OACE,cAAC,IAAD,CACEC,KAAK,SACLC,GAAG,gBACHC,QAAmB,UAAVJ,EACTK,SAAUJ,EACVK,MAAM,WAKGC,qBAAKR,G,yBCVpB,SAASS,EAAT,GAA0B,IAClBC,EAAiB,SADA,EAATT,MACkBU,IAAYC,IAC5C,OAAO,cAAC,IAAD,CAAiBF,KAAMA,IAGjBF,qBAAKC,GCLpB,SAASI,EAAT,GAAyB,IACjBH,EAAiB,SADD,EAATT,MACmBa,IAAaC,IAC7C,OAAO,cAAC,IAAD,CAAiBL,KAAMA,IAGjBF,qBAAKK,GCJpB,SAASG,EAAT,GAA4C,IAApBf,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC7B,OACE,cAACe,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,IAAN,CAAUC,UAAU,yBAApB,UACE,uBAAOA,UAAU,MAAjB,SACE,cAAC,EAAD,CAAKlB,MAAOA,MAEd,cAAC,EAAD,CAAUA,MAAOA,EAAOC,SAAUA,IAClC,uBAAOiB,UAAU,OAAjB,SACE,cAAC,EAAD,CAAMlB,MAAOA,WAOvB,IAAMmB,EAAU,SAAUC,EAAWC,GACnC,OAAOD,EAAUpB,QAAUqB,EAAUrB,OAGxBO,iBAAKQ,EAAcI,G,QCtB5BG,EAAO,CACX,IAAK,CACH,CAAEC,KAAM,YAAaC,GAAI,cACzB,CAAED,KAAM,kBAAmBC,GAAI,cAC/B,CAAED,KAAM,SAAUC,GAAI,YAExB,SAAU,CACR,CAAED,KAAM,kBAAmBC,GAAI,QAC/B,CAAED,KAAM,gBAAiBC,GAAI,eAIjC,SAASC,EAAT,GAAsE,IAAnDC,EAAkD,EAAlDA,KAAiBC,EAAiC,EAA5CC,UAAgBC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,eAC3CC,EAAa,SAACC,GAIlB,GAHAA,EAAEC,iBAEFH,IACIH,EAAK,CACP,IAAMO,EAAKC,SAASC,cAAcJ,EAAEK,OAAOlC,IAC3C,GAAI0B,EACFS,YAAW,WACT,IAAMC,EAASL,EAAGM,UAAYb,EAAIc,wBAAwBC,OAC1DC,OAAOC,SAAS,EAAGL,KAClB,SACE,CACL,IAAMA,EAASL,EAAGM,UAAYb,EAAIc,wBAAwBC,OAC1DC,OAAOC,SAAS,EAAGL,MAKnBM,EAAWvB,EAAKI,GAEtB,OACE,qCACE,cAACoB,EAAA,EAAIC,KAAL,CACEC,GAAID,IACJvB,GAAa,MAATE,EAAe,SAAW,IAC9BuB,QAAS,kBAAMpB,GAAYC,KAH7B,SAKY,MAATJ,EAAe,qBAAuB,kBAExCmB,EAASK,KAAI,SAACC,EAAMC,GAAP,OACZ,cAACN,EAAA,EAAIC,KAAL,CAAkBM,KAAMF,EAAK3B,GAAIrB,GAAIgD,EAAK3B,GAAIyB,QAASlB,EAAvD,SACGoB,EAAK5B,MADO6B,SAQR7C,qBAAKkB,G,QC+BLlB,yBAAK+C,aA7EpB,WACE,IAAMC,EAAQC,qBAAWC,KACnB9B,EAAM+B,mBAFM,ECNO,WACzB,IAAMH,EAAQC,qBAAWC,KAEnBE,EAAaxB,SAASC,cAAc,4BACpCwB,EAAQzB,SAASC,cAAc,wCAE/ByB,EAAQ,UACRC,EAAO,UAEPC,EAAU,SAACC,GACfrB,OAAOsB,aAAaC,QAAQ,QAASF,GACrCT,EAAMY,SAASH,IA4BjB,OAbAI,qBAAU,WACR,IAAMC,EAAa1B,OAAOsB,aAAaK,QAAQ,SAC/CD,EAAad,EAAMY,SAASE,GAAcN,EAAQ,SAC9CM,GAA6B,UAAfA,GAChBV,EAAWY,QAAUV,EACrBD,EAAMW,QAAUV,IAEhBF,EAAWY,QAAUT,EACrBF,EAAMW,QAAUT,KAGjB,IAEI,CAzBc,WACC,UAAhBP,EAAMvD,OACR+D,EAAQ,QACRJ,EAAWY,QAAUT,EACrBF,EAAMW,QAAUT,IAEhBC,EAAQ,SACRJ,EAAWY,QAAUV,EACrBD,EAAMW,QAAUV,KDbGW,GAAhBC,EAHW,sBAIeC,mBAAS,CACxC7C,UAAU,IALM,mBAIX8C,EAJW,KAIJC,EAJI,KAQZC,EAAWC,cACXC,EAAUC,cAEVhF,EAAQuD,EAAMvD,MAEdiF,EAAWC,uBACf,SAACC,GAAD,OAAUP,EAAgB,2BAAKD,GAAUQ,MACzC,CAACR,IAEGS,EAAcF,uBAAY,kBAAMD,EAAS,CAAEpD,UAAU,MAAU,CACnEoD,IAEIhF,EAAWiF,uBAAY,WAAWT,MAAgB,CAACA,IAyBzD,OACE,cAACY,EAAA,EAAD,CACEC,GAAc,UAAVtF,GAAqBA,EACzBuF,QAASvF,EACTkB,UAAqB,SAAVlB,GAAoB,gBAC/BwF,OAAO,MACPC,OAAO,KACP5D,SAAU8C,EAAM9C,SAChB6D,SAAU,kBAAMT,EAAS,CAAEpD,UAAU8C,EAAM9C,YAC3CF,IAAKA,EARP,SAUE,eAACgE,EAAA,EAAD,WACE,cAACN,EAAA,EAAOO,MAAR,CAAcvC,KAAK,IAAIJ,QAnCT,SAACjB,IACnBA,EAAEC,iBACwB,MAAtB4C,EAASgB,WACG1D,SAAS2D,iBAAiB,aAClCC,SAAQ,SAAC7D,GACbA,EAAG8D,UAAUC,OAAO,aAElBtB,EAAM9C,UACRoD,EAAS,CAAEpD,UAAU,IACrBS,YAAW,kBAAMK,OAAOC,SAAS,EAAG,KAAI,MAExCD,OAAOC,SAAS,EAAG,IAGjB+B,EAAM9C,UACRoD,EAAS,CAAEpD,UAAU,IACrBS,YAAW,kBAAMyC,EAAQmB,KAAK,OAAM,MAEpCnB,EAAQmB,KAAK,MAiBb,iBAGA,cAACb,EAAA,EAAOc,OAAR,CAAeC,gBAAc,iBAC7B,eAACf,EAAA,EAAOgB,SAAR,CAAiBlG,GAAG,eAApB,UACE,cAAC2C,EAAA,EAAD,CAAK5B,UAAU,sBAAf,SACE,cAAC,EAAD,CACEQ,KAAMmD,EAASgB,SACfjE,UAAWD,EAAI2E,QACfzE,SAAU8C,EAAM9C,SAChBC,eAAgBsD,MAGpB,cAAC,EAAD,CAAcpF,MAAOA,EAAOC,SAAUA","file":"static/js/11.04d409a7.chunk.js","sourcesContent":["import { memo } from \"react\";\nimport Check from \"react-bootstrap/FormCheck\";\n\nfunction Switcher({ theme, tToggler }) {\n  return (\n    <Check\n      type=\"switch\"\n      id=\"custom-switch\"\n      checked={theme === \"light\" ? false : true}\n      onChange={tToggler}\n      label=\"&zwnj;\"\n    />\n  );\n}\n\nexport default memo(Switcher);\n","import { memo } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoon as MoonSolid } from \"@fortawesome/free-solid-svg-icons\";\nimport { faMoon as MoonRegular } from \"@fortawesome/free-regular-svg-icons\";\n\nfunction Moon({ theme }) {\n  const icon = theme === \"dark\" ? MoonSolid : MoonRegular;\n  return <FontAwesomeIcon icon={icon} />;\n}\n\nexport default memo(Moon);\n","import { memo } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun as SunSolid } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSun as SunRegular } from \"@fortawesome/free-regular-svg-icons\";\n\nfunction Sun({ theme }) {\n  const icon = theme === \"dark\" ? SunRegular : SunSolid;\n  return <FontAwesomeIcon icon={icon} />;\n}\n\nexport default memo(Sun);\n","import Form from \"react-bootstrap/Form\";\nimport Switcher from \"./Switcher\";\nimport { memo } from \"react\";\nimport Moon from \"./Moon\";\nimport Sun from \"./Sun\";\n\nfunction FormSwitcher({ theme, tToggler }) {\n  return (\n    <Form>\n      <Form.Row className=\"justify-content-center\">\n        <small className=\"sun\">\n          <Sun theme={theme} />\n        </small>\n        <Switcher theme={theme} tToggler={tToggler} />\n        <small className=\"moon\">\n          <Moon theme={theme} />\n        </small>\n      </Form.Row>\n    </Form>\n  );\n}\n\nconst compare = function (prevProps, nextProps) {\n  return prevProps.theme === nextProps.theme;\n};\n\nexport default memo(FormSwitcher, compare);\n","import { Link } from \"react-router-dom\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { memo } from \"react\";\n\nconst List = {\n  \"/\": [\n    { nama: \"Deskripsi\", to: \"#deskripsi\" },\n    { nama: \"Pandangan Orang\", to: \"#KataOrang\" },\n    { nama: \"Gambar\", to: \"#gambar\" },\n  ],\n  \"/covid\": [\n    { nama: \"Kondisi Terkini\", to: \"#all\" },\n    { nama: \"Data Provinsi\", to: \"#provinsi\" },\n  ],\n};\n\nfunction NavLink({ path, navbarRef: ref, expanded, setExpandClose }) {\n  const handleLink = (e) => {\n    e.preventDefault();\n\n    setExpandClose();\n    if (ref) {\n      const el = document.querySelector(e.target.id);\n      if (expanded) {\n        setTimeout(() => {\n          const tujuan = el.offsetTop - ref.getBoundingClientRect().height;\n          window.scrollTo(0, tujuan);\n        }, 150);\n      } else {\n        const tujuan = el.offsetTop - ref.getBoundingClientRect().height;\n        window.scrollTo(0, tujuan);\n      }\n    }\n  };\n\n  const renderer = List[path];\n\n  return (\n    <>\n      <Nav.Link\n        as={Link}\n        to={path === \"/\" ? \"/covid\" : \"/\"}\n        onClick={() => expanded && setExpandClose()}\n      >\n        {path === \"/\" ? \"Informasi Covid 19\" : \"Halaman Utama\"}\n      </Nav.Link>\n      {renderer.map((link, i) => (\n        <Nav.Link key={i} href={link.to} id={link.to} onClick={handleLink}>\n          {link.nama}\n        </Nav.Link>\n      ))}\n    </>\n  );\n}\n\nexport default memo(NavLink);\n","import { useRef, useState, useContext, useCallback, memo } from \"react\";\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { useDarkMode } from \"../../hooks/useDarkMode\";\nimport { Context } from \"../../utils/stateProvider\";\nimport FormSwitcher from \"./Memoized/FormSwitcher\";\nimport NavLink from \"./Memoized/NavLink\";\nimport { observer } from \"mobx-react\";\n\nfunction Navigasi() {\n  const store = useContext(Context);\n  const ref = useRef();\n  const [themeToggler] = useDarkMode();\n  const [state, UNSAFE_setState] = useState({\n    expanded: false,\n  });\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const theme = store.theme;\n\n  const setState = useCallback(\n    (data) => UNSAFE_setState({ ...state, ...data }),\n    [state]\n  );\n  const expandClose = useCallback(() => setState({ expanded: false }), [\n    setState,\n  ]);\n  const tToggler = useCallback(() => void themeToggler(), [themeToggler]);\n\n  const handleBrand = (e) => {\n    e.preventDefault();\n    if (location.pathname === \"/\") {\n      const Links = document.querySelectorAll(\".nav-link\");\n      Links.forEach((el) => {\n        el.classList.remove(\"active\");\n      });\n      if (state.expanded) {\n        setState({ expanded: false });\n        setTimeout(() => window.scrollTo(0, 0), 150);\n      } else {\n        window.scrollTo(0, 0);\n      }\n    } else {\n      if (state.expanded) {\n        setState({ expanded: false });\n        setTimeout(() => history.push(\"/\"), 300);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  return (\n    <Navbar\n      bg={theme === \"light\" && theme}\n      variant={theme}\n      className={theme === \"dark\" && \"navbar-custom\"}\n      sticky=\"top\"\n      expand=\"lg\"\n      expanded={state.expanded}\n      onToggle={() => setState({ expanded: state.expanded ? false : true })}\n      ref={ref}\n    >\n      <Container>\n        <Navbar.Brand href=\"#\" onClick={handleBrand}>\n          KIR\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navigasi-nav\" />\n        <Navbar.Collapse id=\"navigasi-nav\">\n          <Nav className=\"ml-auto text-center\">\n            <NavLink\n              path={location.pathname}\n              navbarRef={ref.current}\n              expanded={state.expanded}\n              setExpandClose={expandClose}\n            />\n          </Nav>\n          <FormSwitcher theme={theme} tToggler={tToggler} />\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default memo(observer(Navigasi));\n","import { useEffect, useContext } from \"react\";\nimport { Context } from \"../utils/stateProvider\";\n\nexport const useDarkMode = () => {\n  const store = useContext(Context);\n\n  const themeColor = document.querySelector('meta[name=\"theme-color\"]');\n  const msApp = document.querySelector('meta[name=\"msapplication-TileColor\"]');\n\n  const light = \"#f0efeb\";\n  const dark = \"#323234\";\n\n  const setMode = (mode) => {\n    window.localStorage.setItem(\"theme\", mode);\n    store.setTheme(mode);\n  };\n\n  const themeToggler = () => {\n    if (store.theme === \"light\") {\n      setMode(\"dark\");\n      themeColor.content = dark;\n      msApp.content = dark;\n    } else {\n      setMode(\"light\");\n      themeColor.content = light;\n      msApp.content = light;\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem(\"theme\");\n    localTheme ? store.setTheme(localTheme) : setMode(\"light\");\n    if (localTheme && localTheme === \"light\") {\n      themeColor.content = light;\n      msApp.content = light;\n    } else {\n      themeColor.content = dark;\n      msApp.content = dark;\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return [themeToggler];\n};\n"],"sourceRoot":""}
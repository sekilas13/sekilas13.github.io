{"version":3,"sources":["App/Components/main/lazy/JumbonImg.js","App/utils/loadRealImage.js"],"names":["Animated","lazy","then","mod","default","animated","img","src","real","placeholder","JumboImg","offset","calc","useState","loading","setLoading","useEffect","loadRealImage","className","alt","style","filter","transform","interpolate","transition","overflow","Promise","resolve","image","window","Image","onload"],"mappings":"kJAEMA,EAAWC,gBAAK,kBACpB,wCAAuBC,MAAK,SAACC,GAAD,MAAU,CAAEC,QAASD,EAAIE,SAASC,WAG1DC,EAAM,CACVC,KAA+B,uBAC/BC,YAAsC,oCAuBzBC,UApBf,YAAqC,IAAjBC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAAQ,EACJC,oBAAS,GADL,mBAC3BC,EAD2B,KAClBC,EADkB,KAKlC,OAFAC,qBAAU,kBAAMC,YAAcV,EAAIC,MAAMN,MAAK,kBAAMa,GAAW,QAAS,IAGrE,cAACf,EAAD,CACEO,IAAKO,EAAUP,EAAIE,YAAcF,EAAIC,KACrCU,UAAU,gCACVC,IAAI,WACJC,MAAO,CACLC,OAAQP,EAAU,YAAc,OAChCQ,UAAWX,EAAOY,YAAYX,GAC9BY,WAAY,mBACZC,SAAU,c,gCClBHR,IAPO,SAACV,GAAD,OACpB,IAAImB,SAAQ,SAACC,GACX,IAAMC,EAAQ,IAAIC,OAAOC,MACzBF,EAAMG,OAASJ,EACfC,EAAMrB,IAAMA","file":"static/js/22.3942535c.chunk.js","sourcesContent":["import loadRealImage from \"../../../utils/loadRealImage\";\nimport { lazy, useEffect, useState } from \"react\";\nconst Animated = lazy(() =>\n  import(\"react-spring\").then((mod) => ({ default: mod.animated.img }))\n);\n\nconst src = {\n  real: process.env.PUBLIC_URL + \"/assets/real/KIR.png\",\n  placeholder: process.env.PUBLIC_URL + \"/assets/real/KIR.placeholder.png\",\n};\n\nfunction JumboImg({ offset, calc }) {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => loadRealImage(src.real).then(() => setLoading(false)), []);\n\n  return (\n    <Animated\n      src={loading ? src.placeholder : src.real}\n      className=\"img-fluid text-center rounded\"\n      alt=\"Logo KIR\"\n      style={{\n        filter: loading ? \"blur(5px)\" : \"none\",\n        transform: offset.interpolate(calc),\n        transition: \"all 0.40s linear\",\n        overflow: \"hidden\",\n      }}\n    />\n  );\n}\n\nexport default JumboImg;\n","const loadRealImage = (src) =>\n  new Promise((resolve) => {\n    const image = new window.Image();\n    image.onload = resolve;\n    image.src = src;\n  });\n\nexport default loadRealImage;\n"],"sourceRoot":""}